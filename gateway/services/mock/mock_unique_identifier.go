// Code generated by MockGen. DO NOT EDIT.
// Source: ./services/unique_identifier.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUniqueIdentifierService is a mock of UniqueIdentifierService interface.
type MockUniqueIdentifierService struct {
	ctrl     *gomock.Controller
	recorder *MockUniqueIdentifierServiceMockRecorder
}

// MockUniqueIdentifierServiceMockRecorder is the mock recorder for MockUniqueIdentifierService.
type MockUniqueIdentifierServiceMockRecorder struct {
	mock *MockUniqueIdentifierService
}

// NewMockUniqueIdentifierService creates a new mock instance.
func NewMockUniqueIdentifierService(ctrl *gomock.Controller) *MockUniqueIdentifierService {
	mock := &MockUniqueIdentifierService{ctrl: ctrl}
	mock.recorder = &MockUniqueIdentifierServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUniqueIdentifierService) EXPECT() *MockUniqueIdentifierServiceMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockUniqueIdentifierService) Generate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	return ret0
}

// Generate indicates an expected call of Generate.
func (mr *MockUniqueIdentifierServiceMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockUniqueIdentifierService)(nil).Generate))
}
